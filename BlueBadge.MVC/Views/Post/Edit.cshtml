@model BlueBadge.Models.Post.PostEdit

@{
    ViewBag.Title = "Edit";
}

<div class="container" style="background-color:rgba(255, 255, 255, 0.15); border: 5px outset white;">

    <div class="row" style="margin: 1.5em 0 0 0;">

        <div class="col" style="text-align:center;">
            <h4> Current Photo</h4>
            @if (Model.Files.Any(ff => ff.FileType == BlueBadge.Data.FileType.Picture))
            {
                <img src="~/File?id=@Model.Files.First(f => f.FileType == BlueBadge.Data.FileType.Picture).PhotoId" />
            }
            else
            {
                <img src="~/Content/assets/NOPHOTO.jpg" />
            }
        </div>

        <div class="col">
            @using (Html.BeginForm("Edit", "Post", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.PostID)
                @Html.HiddenFor(model => model.PhotoId)
                @*@{
            var filePath = Model.Files.First(f => f.FileType == BlueBadge.Data.FileType.Picture);
            Model.Files.Add(filePath);
            @Html.HiddenFor(model => model.Files)
        }*@
                <h4>Edit Tattoo</h4>
                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ArtistID, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        @Html.DropDownList("ArtistID", null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ArtistID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TattooDetails, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.TattooDetails, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TattooDetails, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-10">
                        <input type="file" id="PostPic" name="upload" />
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-light" />
                    </div>
                </div>
            </div>
            }


        </div>
    </div>
    <div style="text-align: right; padding: 0 0 1em 0;">
        @Html.ActionLink("Back to List", "Index", "Post", routeValues: null, htmlAttributes: new { @class = "btn btn-light" })
    </div>

</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<style>
    img {
        height: 350px;
        width: 350px;
        -webkit-box-shadow: 16px 16px 10px 0px rgba(39,39,46,1);
        -moz-box-shadow: 16px 16px 10px 0px rgba(39,39,46,1);
        box-shadow: 16px 16px 10px 0px rgba(39,39,46,1);
    }
</style>

